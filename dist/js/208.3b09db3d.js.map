{"version":3,"file":"js/208.3b09db3d.js","mappings":"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","sources":["webpack://playback/./src/forms/HandByHand.vue","webpack://playback/src/forms/HandByHand.vue","webpack://playback/./src/forms/HandByHand.vue?bf2a","webpack://playback/./src/forms/HandByHand.vue?12ad"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',[_vm._m(0),_c('canvas',{ref:\"gameCanvas\",attrs:{\"width\":\"360\",\"height\":\"400\"}})])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{attrs:{\"id\":\"narration\"}},[_c('h2',{staticClass:\"ui header\"},[_vm._v(\"【手勾手】 \"),_c('div',{staticClass:\"sub header\"},[_vm._v(\"一對一對中的子形式\")])]),_c('p',[_vm._v(\"先站出來的演員擺出一隻彎曲的手，等著第二位也就是他的搭擋來勾住。\")]),_c('p',[_vm._v(\"勾住之後，先站出來的演員像流動塑像一樣，重覆一個動作和短句三次。唯一不同的是他同時要拉扯第二位站出來的演員。\")]),_c('p',[_vm._v(\"接著，第二位位站出來的演員反向拉扯先站出來的演員，並站在相反的立場，重覆一個動作和短句三次。\")]),_c('p',[_vm._v(\"來回各講三輪之後一起定格結凍。\")])])\n}]\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <div id=\"narration\">\n      <h2 class=\"ui header\">【手勾手】\n        <div class=\"sub header\">一對一對中的子形式</div>\n      </h2>\n      <p>先站出來的演員擺出一隻彎曲的手，等著第二位也就是他的搭擋來勾住。</p>\n      <p>勾住之後，先站出來的演員像流動塑像一樣，重覆一個動作和短句三次。唯一不同的是他同時要拉扯第二位站出來的演員。</p>\n      <p>接著，第二位位站出來的演員反向拉扯先站出來的演員，並站在相反的立場，重覆一個動作和短句三次。</p>\n      <p>來回各講三輪之後一起定格結凍。</p>\n    </div>\n    <canvas ref=\"gameCanvas\" width=\"360\" height=\"400\"></canvas>\n  </div>\n</template>\n\n<script>\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  data() {\n    return {\n      circle1: {\n        x: 75,\n        y: 200,\n        radius: 40,\n        color: 'red',\n        dx: 0\n      },\n      circle2: {\n        x: 225,\n        y: 200,\n        radius: 40,\n        color: 'green',\n        dx: 0\n      },\n      handLength: 0,\n      pullDistance: 2,\n      iterations: 6,\n      currentIteration: 0,\n      pullingLeft: true,\n      tiredTextCount: 0,\n      familyTextCount: 0,\n      faceVisible: true,\n      redCircleTexts: [\n        '我好累',\n        '這工作太勉強',\n        '真的不行了',\n        '我好累',\n        '這工作太勉強',\n        '真的不行了'\n      ],\n      greenCircleTexts: [\n        '這份工作對我很重要',\n        '我要養家',\n        '我要融入社會',\n        '這份工作對我很重要',\n        '我要養家',\n        '我要融入社會'\n      ],\n    };\n  },\n  mounted() {\n    this.canvas = this.$refs.gameCanvas;\n    this.ctx = this.canvas.getContext('2d');\n    this.update();\n    this.appearAnimation();\n  },\n  methods: {\n    drawCircle(circle) {\n      this.ctx.beginPath();\n      this.ctx.arc(circle.x, circle.y, circle.radius, 0, Math.PI * 2);\n      this.ctx.fillStyle = circle.color;\n      this.ctx.fill();\n      this.ctx.closePath();\n    },\n    drawHand(circle, direction) {\n      this.ctx.beginPath();\n      this.ctx.moveTo(circle.x, circle.y);\n      if (direction === 'right') {\n        this.ctx.lineTo(circle.x + this.handLength, circle.y);\n      } else {\n        this.ctx.lineTo(circle.x - this.handLength, circle.y);\n      }\n      this.ctx.strokeStyle = circle.color;\n      this.ctx.stroke();\n      this.ctx.closePath();\n    },\n    drawFace(circle) {\n      // Drawing face logic for circle1 (happy face)\n      this.ctx.beginPath();\n      this.ctx.arc(circle.x - 10, circle.y - 10, 2, 0, Math.PI * 2);\n      this.ctx.arc(circle.x + 10, circle.y - 10, 2, 0, Math.PI * 2);\n      this.ctx.fillStyle = 'black';\n      this.ctx.fill();\n      this.ctx.closePath();\n      this.ctx.beginPath();\n      this.ctx.arc(circle.x, circle.y + 5, 10, 0, Math.PI, false);\n      this.ctx.strokeStyle = 'black';\n      this.ctx.stroke();\n      this.ctx.closePath();\n    },\n    drawFace2(circle) {\n      // Drawing face logic for circle2 (angry face)\n      this.ctx.beginPath();\n      this.ctx.arc(circle.x - 10, circle.y - 10, 2, 0, Math.PI * 2);\n      this.ctx.arc(circle.x + 10, circle.y - 10, 2, 0, Math.PI * 2);\n      this.ctx.fillStyle = 'black';\n      this.ctx.fill();\n      this.ctx.closePath();\n      this.ctx.beginPath();\n      this.ctx.arc(circle.x, circle.y + 10, 20, Math.PI, 0, true);\n      this.ctx.strokeStyle = 'black';\n      this.ctx.stroke();\n      this.ctx.closePath();\n    },\n    drawText(text, x, y) {\n      this.ctx.fillStyle = 'black';\n      this.ctx.font = '20px Arial';\n      this.ctx.fillText(text, x, y);\n    },\n    pullAction() {\n      const pull = () => {\n        if (this.currentIteration < this.iterations) {\n          if (this.pullingLeft) {\n            this.circle1.dx = -this.pullDistance;\n            this.circle2.dx = -this.pullDistance;\n            this.tiredTextCount = 3;\n          } else {\n            this.circle1.dx = this.pullDistance;\n            this.circle2.dx = this.pullDistance;\n            this.familyTextCount = 3;\n          }\n\n          const targetX = this.pullingLeft ? 25 : 225;          \n          const interval = setInterval(() => {\n            this.circle1.x += this.circle1.dx;\n            this.circle2.x += this.circle2.dx;\n            if ((this.pullingLeft && this.circle1.x <= targetX) || (!this.pullingLeft && this.circle1.x >= targetX)) {\n              clearInterval(interval);\n              this.circle1.dx = 0;\n              this.circle2.dx = 0;\n              this.pullingLeft = !this.pullingLeft;\n              this.currentIteration++;\n              this.tiredTextCount = 0;\n              this.familyTextCount = 0;\n              setTimeout(pull, 500);\n            }\n          }, 20);\n        }\n      };\n      pull();\n    },\n    update() {\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      this.drawCircle(this.circle1);\n      this.drawHand(this.circle1, 'right');\n      this.drawCircle(this.circle2);\n      this.drawHand(this.circle2, 'left');\n\n      let redText = this.redCircleTexts[this.currentIteration] || '';\n      let greenText = this.greenCircleTexts[this.currentIteration] || '';\n\n      for (let i = 0; i < this.tiredTextCount; i++) {\n        this.drawText(redText, this.circle1.x - 10, this.circle1.y - 50 - i * 20);\n      }\n      for (let i = 0; i < this.familyTextCount; i++) {\n        this.drawText(greenText, this.circle2.x - 10, this.circle2.y - 50 - i * 20);\n      }\n\n      this.drawFace(this.circle1);\n      this.drawFace2(this.circle2);\n\n      requestAnimationFrame(this.update);\n    },\n    appearAnimation() {\n      const interval = setInterval(() => {\n        if (this.circle1.radius < 30) {\n          this.circle1.radius += 1;\n        } else if (this.handLength < 50) {\n          this.handLength += 2;\n        } else if (this.circle2.radius < 30) {\n          this.circle2.radius += 1;\n        } else if (this.handLength < 100) {\n          this.handLength += 2;\n        } else {\n          this.faceVisible = true;\n          clearInterval(interval);\n          this.pullAction();\n        }\n      }, 50);\n    }\n  }\n});\n</script>\n\n<style scoped>\ncanvas {\n  border: 1px solid black;\n  display: block;\n  margin: 20px auto;\n}\n#narration {\n  text-align: center;\n  font-size: 16px;\n  margin: 20px;\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./HandByHand.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./HandByHand.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./HandByHand.vue?vue&type=template&id=6167bde6&scoped=true\"\nimport script from \"./HandByHand.vue?vue&type=script&lang=js\"\nexport * from \"./HandByHand.vue?vue&type=script&lang=js\"\nimport style0 from \"./HandByHand.vue?vue&type=style&index=0&id=6167bde6&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6167bde6\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","_setupProxy","_m","ref","attrs","staticRenderFns","staticClass","_v","defineComponent","data","circle1","x","y","radius","color","dx","circle2","handLength","pullDistance","iterations","currentIteration","pullingLeft","tiredTextCount","familyTextCount","faceVisible","redCircleTexts","greenCircleTexts","mounted","canvas","$refs","gameCanvas","ctx","getContext","update","appearAnimation","methods","drawCircle","circle","beginPath","arc","Math","PI","fillStyle","fill","closePath","drawHand","direction","moveTo","lineTo","strokeStyle","stroke","drawFace","drawFace2","drawText","text","font","fillText","pullAction","pull","targetX","interval","setInterval","clearInterval","setTimeout","clearRect","width","height","redText","greenText","i","requestAnimationFrame","component"],"sourceRoot":""}